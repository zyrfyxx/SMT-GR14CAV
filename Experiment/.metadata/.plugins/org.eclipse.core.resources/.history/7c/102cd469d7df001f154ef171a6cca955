/*
 * Auto-generated Spectra file
 */
spec TrafficThiefSum			
				
			
env boolean boolVar_1314383744;
env boolean boolVar_955606577;
env boolean boolVar_1173129090;
env boolean boolVar_2123730370;
env boolean boolVar_1575177078;
env boolean boolVar_1575147287;
env boolean boolVar_955578704;
env boolean boolVar_955576786;
env boolean boolVar_955608495;
env boolean boolVar_1575175160;
env boolean boolVar_363782464;
env boolean boolVar_1575145369;




env boolean foundPolice;
sys {up, down, left, right, stay}move;
sys boolean steal;


// Init expressions Generated by ......
asm ini boolVar_2123730370 = false;
asm ini boolVar_1575147287 = true;
asm ini boolVar_1575177078 = true;
asm ini boolVar_955606577 = true;
asm ini boolVar_955576786 = true;
asm ini boolVar_1314383744 = true;
asm ini boolVar_1575145369 = true;
asm ini boolVar_1575175160 = true;
asm ini boolVar_955608495 = true;
asm ini boolVar_955578704 = true;
asm ini boolVar_1173129090 = false;
asm ini boolVar_363782464 = false;


// Cores Generated by ......
asm ini !( boolVar_2123730370 & boolVar_1314383744 );
asm ini !( boolVar_2123730370 & !boolVar_1575145369 & boolVar_955608495 );
asm ini !( boolVar_1314383744 & boolVar_1575145369 & !boolVar_955608495 );
asm ini !( boolVar_2123730370 & boolVar_1575147287 & !boolVar_955606577 );
asm ini !( boolVar_2123730370 & !boolVar_955606577 & !boolVar_1575145369 );
asm ini !( !boolVar_955606577 & !boolVar_955608495 );
asm ini !( !boolVar_1314383744 & !boolVar_1575145369 & boolVar_955608495 );
asm ini !( boolVar_1575147287 & !boolVar_955606577 & !boolVar_1314383744 );
asm ini !( !boolVar_955606577 & !boolVar_1314383744 & !boolVar_1575145369 );
asm ini !( !boolVar_1575147287 & boolVar_955606577 & boolVar_1314383744 );
asm ini !( !boolVar_1575147287 & !boolVar_1575145369 );
asm ini !( !boolVar_1575147287 & boolVar_1314383744 & !boolVar_955608495 );
asm ini !( !boolVar_2123730370 & boolVar_1575145369 & !boolVar_955608495 );
asm ini !( !boolVar_2123730370 & !boolVar_1575147287 & boolVar_955606577 );
asm ini !( !boolVar_2123730370 & !boolVar_1575147287 & !boolVar_955608495 );
asm ini !( boolVar_1173129090 & boolVar_363782464 );
asm ini !( !boolVar_1575175160 & boolVar_955578704 & boolVar_363782464 );
asm ini !( boolVar_1575175160 & !boolVar_955578704 & boolVar_1173129090 );
asm ini !( boolVar_1575177078 & !boolVar_955576786 & boolVar_363782464 );
asm ini !( !boolVar_955576786 & !boolVar_1575175160 & boolVar_363782464 );
asm ini !( !boolVar_955576786 & !boolVar_955578704 );
asm ini !( !boolVar_1575175160 & boolVar_955578704 & !boolVar_1173129090 );
asm ini !( boolVar_1575177078 & !boolVar_955576786 & !boolVar_1173129090 );
asm ini !( !boolVar_955576786 & !boolVar_1575175160 & !boolVar_1173129090 );
asm ini !( !boolVar_1575177078 & boolVar_955576786 & boolVar_1173129090 );
asm ini !( !boolVar_1575177078 & !boolVar_1575175160 );
asm ini !( !boolVar_1575177078 & !boolVar_955578704 & boolVar_1173129090 );
asm ini !( boolVar_1575175160 & !boolVar_955578704 & !boolVar_363782464 );
asm ini !( !boolVar_1575177078 & boolVar_955576786 & !boolVar_363782464 );
asm ini !( !boolVar_1575177078 & !boolVar_955578704 & !boolVar_363782464 );
asm alw !( boolVar_2123730370 & boolVar_1314383744 );
asm alw !( boolVar_2123730370 & !boolVar_1575145369 & boolVar_955608495 );
asm alw !( boolVar_1314383744 & boolVar_1575145369 & !boolVar_955608495 );
asm alw !( boolVar_2123730370 & boolVar_1575147287 & !boolVar_955606577 );
asm alw !( boolVar_2123730370 & !boolVar_955606577 & !boolVar_1575145369 );
asm alw !( !boolVar_955606577 & !boolVar_955608495 );
asm alw !( !boolVar_1314383744 & !boolVar_1575145369 & boolVar_955608495 );
asm alw !( boolVar_1575147287 & !boolVar_955606577 & !boolVar_1314383744 );
asm alw !( !boolVar_955606577 & !boolVar_1314383744 & !boolVar_1575145369 );
asm alw !( !boolVar_1575147287 & boolVar_955606577 & boolVar_1314383744 );
asm alw !( !boolVar_1575147287 & !boolVar_1575145369 );
asm alw !( !boolVar_1575147287 & boolVar_1314383744 & !boolVar_955608495 );
asm alw !( !boolVar_2123730370 & boolVar_1575145369 & !boolVar_955608495 );
asm alw !( !boolVar_2123730370 & !boolVar_1575147287 & boolVar_955606577 );
asm alw !( !boolVar_2123730370 & !boolVar_1575147287 & !boolVar_955608495 );
asm alw !( boolVar_1173129090 & boolVar_363782464 );
asm alw !( !boolVar_1575175160 & boolVar_955578704 & boolVar_363782464 );
asm alw !( boolVar_1575175160 & !boolVar_955578704 & boolVar_1173129090 );
asm alw !( boolVar_1575177078 & !boolVar_955576786 & boolVar_363782464 );
asm alw !( !boolVar_955576786 & !boolVar_1575175160 & boolVar_363782464 );
asm alw !( !boolVar_955576786 & !boolVar_955578704 );
asm alw !( !boolVar_1575175160 & boolVar_955578704 & !boolVar_1173129090 );
asm alw !( boolVar_1575177078 & !boolVar_955576786 & !boolVar_1173129090 );
asm alw !( !boolVar_955576786 & !boolVar_1575175160 & !boolVar_1173129090 );
asm alw !( !boolVar_1575177078 & boolVar_955576786 & boolVar_1173129090 );
asm alw !( !boolVar_1575177078 & !boolVar_1575175160 );
asm alw !( !boolVar_1575177078 & !boolVar_955578704 & boolVar_1173129090 );
asm alw !( boolVar_1575175160 & !boolVar_955578704 & !boolVar_363782464 );
asm alw !( !boolVar_1575177078 & boolVar_955576786 & !boolVar_363782464 );
asm alw !( !boolVar_1575177078 & !boolVar_955578704 & !boolVar_363782464 );

asm ini !foundPolice;
gar ini steal;
asm alw boolVar_1575147287 & boolVar_1575145369;
asm alw boolVar_1575177078 & boolVar_1575175160;

asm alw boolVar_955606577 & boolVar_955608495;
asm alw boolVar_955576786 & boolVar_955578704;

gar alw !foundPolice -> steal & move=stay;
gar alw foundPolice & (boolVar_2123730370) -> (move != left) & !steal;
gar alw foundPolice & (boolVar_1314383744) -> (move != right) & !steal;
gar alw foundPolice & (boolVar_1173129090) -> (move != up) & !steal;
gar alw foundPolice & (boolVar_363782464) -> (move != down) & !steal;
			

/*
 * Auto-generated Spectra file
 */		
			
//import "DwyerPatterns. spectra"


env boolean carMain;
env boolean carSide;
env boolean boolVar_1429656909;
env boolean boolVar_333013856;
 env boolean pedestrianBtn;
 env boolean ambulanceMain;

 sys {MAIN , SIDE , NONE} go;
 sys boolean greenMain;
 sys boolean greenSide;
 sys boolean greenPedestrian;
 
 asm ini !( boolVar_333013856 & boolVar_1429656909 );
asm ini !( !boolVar_333013856 & !boolVar_1429656909 );
asm alw !( boolVar_333013856 & boolVar_1429656909 );
asm alw !( !boolVar_333013856 & !boolVar_1429656909 );

 predicate excl( boolean p , boolean q):
 !(p & q);

 gar alw excl(greenMain , greenSide) &
 excl( greenPedestrian , greenSide);

 define streetsEmpty :=
 !carSide & !carMain & !ambulanceMain;

 asm ini streetsEmpty;
 asm ini carSide= false & carMain= false ;
 asm alwEv carSide;
 asm alwEv carMain;
 asm alwEv ONCE carSide;

 gar ini go=NONE;
gar alw boolVar_1429656909 ->next (go=MAIN);
gar alw boolVar_333013856 ->next (go=SIDE);
 gar alw streetsEmpty implies
 !greenMain & !greenSide;
 gar alw !(greenMain & greenSide);
 gar alwEv carSide & greenSide;
 gar alwEv carMain & greenMain;

 monitor boolean needGreenMain {
 ini needGreenMain =
 (pedestrianBtn & !greenPedestrian);
 trans next (needGreenMain) =
 ((needGreenMain | pedestrianBtn) &
 !greenPedestrian);
 }
 gar alwEv !needGreenMain;

 counter ambulanceWait (0..5) {
 inc: ambulanceMain & !greenMain;
 reset: greenMain;
 overflow: keep;
 }
 gar alw ambulanceWait < 5;

gar pRespondsToS( carMain , greenMain);
gar pRespondsToS( carSide , greenSide);

pattern pRespondsToS(p, s) {
  var { S0, S1} state;

  -- initial assignments: initial state
  state=S0;

  -- safety this and next state
  G ((state=S0 & ((!p) | (p & s)) & next(state=S0)) |
  (state=S0 & (p & !s) & next(state=S1)) |
  (state=S1 & (s) & next(state=S0)) |
  (state=S1 & (!s) & next(state=S1)));

  -- equivalence of satisfaction
  GF (state=S0);
}

